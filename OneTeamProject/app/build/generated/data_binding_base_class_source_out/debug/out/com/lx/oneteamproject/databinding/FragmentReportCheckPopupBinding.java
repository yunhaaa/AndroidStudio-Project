// Generated by view binder compiler. Do not edit!
package com.lx.oneteamproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.lx.oneteamproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentReportCheckPopupBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button button;

  @NonNull
  public final Button button2;

  @NonNull
  public final ImageButton imageButton3;

  @NonNull
  public final ViewPager2 reportImageOutput;

  @NonNull
  public final TextView reportTextOutput;

  @NonNull
  public final TextView reportTitle;

  @NonNull
  public final TextView textView15;

  private FragmentReportCheckPopupBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button button, @NonNull Button button2, @NonNull ImageButton imageButton3,
      @NonNull ViewPager2 reportImageOutput, @NonNull TextView reportTextOutput,
      @NonNull TextView reportTitle, @NonNull TextView textView15) {
    this.rootView = rootView;
    this.button = button;
    this.button2 = button2;
    this.imageButton3 = imageButton3;
    this.reportImageOutput = reportImageOutput;
    this.reportTextOutput = reportTextOutput;
    this.reportTitle = reportTitle;
    this.textView15 = textView15;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentReportCheckPopupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentReportCheckPopupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_report_check_popup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentReportCheckPopupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button;
      Button button = ViewBindings.findChildViewById(rootView, id);
      if (button == null) {
        break missingId;
      }

      id = R.id.button2;
      Button button2 = ViewBindings.findChildViewById(rootView, id);
      if (button2 == null) {
        break missingId;
      }

      id = R.id.imageButton3;
      ImageButton imageButton3 = ViewBindings.findChildViewById(rootView, id);
      if (imageButton3 == null) {
        break missingId;
      }

      id = R.id.reportImageOutput;
      ViewPager2 reportImageOutput = ViewBindings.findChildViewById(rootView, id);
      if (reportImageOutput == null) {
        break missingId;
      }

      id = R.id.reportTextOutput;
      TextView reportTextOutput = ViewBindings.findChildViewById(rootView, id);
      if (reportTextOutput == null) {
        break missingId;
      }

      id = R.id.reportTitle;
      TextView reportTitle = ViewBindings.findChildViewById(rootView, id);
      if (reportTitle == null) {
        break missingId;
      }

      id = R.id.textView15;
      TextView textView15 = ViewBindings.findChildViewById(rootView, id);
      if (textView15 == null) {
        break missingId;
      }

      return new FragmentReportCheckPopupBinding((ConstraintLayout) rootView, button, button2,
          imageButton3, reportImageOutput, reportTextOutput, reportTitle, textView15);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
