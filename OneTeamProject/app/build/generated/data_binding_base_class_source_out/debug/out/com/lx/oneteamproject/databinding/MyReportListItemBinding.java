// Generated by view binder compiler. Do not edit!
package com.lx.oneteamproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.lx.oneteamproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MyReportListItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView reportdate;

  @NonNull
  public final ImageView reportimage;

  @NonNull
  public final TextView reportlocation;

  @NonNull
  public final TextView reportprogress;

  @NonNull
  public final TextView reporttitle;

  private MyReportListItemBinding(@NonNull LinearLayout rootView, @NonNull TextView reportdate,
      @NonNull ImageView reportimage, @NonNull TextView reportlocation,
      @NonNull TextView reportprogress, @NonNull TextView reporttitle) {
    this.rootView = rootView;
    this.reportdate = reportdate;
    this.reportimage = reportimage;
    this.reportlocation = reportlocation;
    this.reportprogress = reportprogress;
    this.reporttitle = reporttitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MyReportListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MyReportListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.my_report_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MyReportListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.reportdate;
      TextView reportdate = ViewBindings.findChildViewById(rootView, id);
      if (reportdate == null) {
        break missingId;
      }

      id = R.id.reportimage;
      ImageView reportimage = ViewBindings.findChildViewById(rootView, id);
      if (reportimage == null) {
        break missingId;
      }

      id = R.id.reportlocation;
      TextView reportlocation = ViewBindings.findChildViewById(rootView, id);
      if (reportlocation == null) {
        break missingId;
      }

      id = R.id.reportprogress;
      TextView reportprogress = ViewBindings.findChildViewById(rootView, id);
      if (reportprogress == null) {
        break missingId;
      }

      id = R.id.reporttitle;
      TextView reporttitle = ViewBindings.findChildViewById(rootView, id);
      if (reporttitle == null) {
        break missingId;
      }

      return new MyReportListItemBinding((LinearLayout) rootView, reportdate, reportimage,
          reportlocation, reportprogress, reporttitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
